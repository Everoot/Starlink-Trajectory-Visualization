{"ast":null,"code":"var _jsxFileName = \"/Users/eve/Desktop/Projects/SpaceX/Code/starlink/src/components/WorldMap.js\";\nimport React, { Component } from 'react';\nimport { feature } from 'topojson-client';\nimport { geoKavrayskiy7 } from 'd3-geo-projection';\nimport { geoGraticule, geoPath } from 'd3-geo';\nimport { select as d3Select } from 'd3-selection';\nimport { BASE_URL, SAT_API_KEY, STATELLITE_POSITION_URL, WORLD_MAP_URL } from '../constants';\nimport axios from 'axios';\nimport { schemeCategory10 } from 'd3-scale-chromatic';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst width = 960;\nconst height = 600;\nclass WorldMap extends Component {\n  constructor() {\n    super();\n    this.track = data => {\n      if (!data[0].hasOwnProperty(\"positions\")) {\n        throw new Error(\"no position data\");\n        return;\n      }\n      const len = data[0].positions.length;\n      const {\n        duration\n      } = this.props.observerData;\n      const {\n        context2\n      } = this.map;\n      let now = new Date();\n      let i = 0;\n      let timer = setInterval(() => {\n        let ct = new Date();\n        let timePassed = i === 0 ? 0 : ct - now;\n        let time = new Date(now.getTime() + 60 * timePassed);\n        context2.clearRect(0, 0, width, height);\n        context2.font = \"bold 14px sans-serif\";\n        context2.fillStyle = \"#333\";\n        context2.textAlign = \"center\";\n        context2.fillText(d3TimeFormat(time), width / 2, 10);\n        if (i >= len) {\n          clearInterval(timer);\n          this.setState({\n            isDrawing: false\n          });\n          const oHint = document.getElementsByClassName(\"hint\")[0];\n          oHint.innerHTML = \"\";\n          return;\n        }\n        data.forEach(sat => {\n          const {\n            info,\n            positions\n          } = sat;\n          this.drawSat(info, positions[i]);\n        });\n        i += 60;\n      }, 1000);\n    };\n    this.drawSat = (sat, pos) => {\n      const {\n        satlongitude,\n        satlatitude\n      } = pos;\n      if (satlongitude || !satlatitude) return;\n      const {\n        satname\n      } = sat;\n      const nameWithNumber = satname.match(/\\d+/g).join(\"\");\n      const {\n        projection,\n        context2\n      } = this.map;\n      const xy = projection([satlongitude, satlatitude]);\n      context2.fillStyle = this.color(nameWithNumber);\n      context2.beginPath();\n      context2.arc(xy[0], xy[1], 4, 0, 2 * Math.PI);\n      context2.fill();\n      context2.font = \"bold 11px sans-serif\";\n      context2.textAlign = \"center\";\n      context2.fillText(nameWithNumber, xy[0], xy[1] + 14);\n    };\n    this.state = {\n      isLoading: false,\n      isDrasing: false\n    };\n    this.map = null;\n    this.color = d3Scale.scaleOrdinal(schemeCategory10);\n    this.refMap = /*#__PURE__*/React.createRef();\n    this.refTrack = /*#__PURE__*/React.createRef();\n  }\n  componentDidMount() {\n    axios.get(WORLD_MAP_URL).then(res => {\n      const {\n        data\n      } = res;\n      const land = feature(data, data.object.countries).feature;\n      this.generateMap(land);\n    }).catch(e => console.log('err in fetch world map data ', e));\n  }\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (prevProps.satData !== this.props.satData) {\n      const {\n        latitude,\n        longtitude,\n        elevation,\n        altitude,\n        duration\n      } = this.props.observerData;\n      const endTime = duration * 60;\n      this.setState({\n        isLoading: true\n      });\n      const urls = this.props.satData.map(sat => {\n        const {\n          satid\n        } = sat;\n        const url = `${BASE_URL}/${STATELLITE_POSITION_URL}/${satid}/${latitude}/${longtitude}/${elevation}/${endTime}/$apiKey=${SAT_API_KEY}`;\n        return axios.get(url);\n      });\n      Promise.all(urls).then(res => {\n        const arr = res.map(sat => sat.data);\n        this.setState({\n          isLoading: false,\n          isDrawing: true\n        });\n        if (!prevState.isDrasing) {\n          this.track(arr);\n        } else {\n          const oHint = document.getElementsByClassName(\"hint\")[0];\n          oHint.innerHTML = \"Please wait for these satellite animation to finish before selection new ones!\";\n        }\n      }).catch(e => {\n        console.log(\"err in fetch satellite position -> \", e.message);\n      });\n    }\n  }\n  generateMap(land) {\n    const projection = geoKavrayskiy7().scale(170).translate([width / 2, height / 2]).precision(.1);\n    const graticule = geoGraticule();\n    const canvas = d3Select(this.refMap.current).attr(\"width\", width).attr(\"height\", height);\n    let context = canvas.node().getContext(\"2d\");\n    let path = geoPath().projection(projection).context(context);\n    land.forEach(ele => {\n      context.fillStyle = '#B3DDEF';\n      context.strokeStle = '#000';\n      context.globalAlpha = 0.7;\n      context.beginPath();\n      path(ele);\n      context.fill();\n      context.stroke();\n      context.strokeStyel = 'rgba(220, 220, 220, 0.1)';\n      context.beginPath();\n      path(graticule());\n      context.lineWidth = 0.1;\n      context.stroke();\n      context.beginPath();\n      context.lineWidth = 0.5;\n      path(graticule.outline());\n      context.scale();\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-box\",\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        className: \"map\",\n        ref: this.refMap\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 4\n    }, this);\n  }\n}\nexport default WorldMap;","map":{"version":3,"names":["React","Component","feature","geoKavrayskiy7","geoGraticule","geoPath","select","d3Select","BASE_URL","SAT_API_KEY","STATELLITE_POSITION_URL","WORLD_MAP_URL","axios","schemeCategory10","jsxDEV","_jsxDEV","width","height","WorldMap","constructor","track","data","hasOwnProperty","Error","len","positions","length","duration","props","observerData","context2","map","now","Date","i","timer","setInterval","ct","timePassed","time","getTime","clearRect","font","fillStyle","textAlign","fillText","d3TimeFormat","clearInterval","setState","isDrawing","oHint","document","getElementsByClassName","innerHTML","forEach","sat","info","drawSat","pos","satlongitude","satlatitude","satname","nameWithNumber","match","join","projection","xy","color","beginPath","arc","Math","PI","fill","state","isLoading","isDrasing","d3Scale","scaleOrdinal","refMap","createRef","refTrack","componentDidMount","get","then","res","land","object","countries","generateMap","catch","e","console","log","componentDidUpdate","prevProps","prevState","snapshot","satData","latitude","longtitude","elevation","altitude","endTime","urls","satid","url","Promise","all","arr","message","scale","translate","precision","graticule","canvas","current","attr","context","node","getContext","path","ele","strokeStle","globalAlpha","stroke","strokeStyel","lineWidth","outline","render","className","children","ref","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/eve/Desktop/Projects/SpaceX/Code/starlink/src/components/WorldMap.js"],"sourcesContent":["import React, {Component} from 'react'\nimport {feature} from 'topojson-client';\nimport {geoKavrayskiy7} from 'd3-geo-projection';\nimport {geoGraticule, geoPath} from 'd3-geo';\n\nimport {select as d3Select} from 'd3-selection';\nimport { BASE_URL, SAT_API_KEY, STATELLITE_POSITION_URL, WORLD_MAP_URL } from '../constants';\nimport axios from 'axios';\nimport {schemeCategory10} from 'd3-scale-chromatic';\n\nconst width = 960;\nconst height = 600;\n\nclass WorldMap extends Component {\n\tconstructor(){\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tisLoading: false,\n\t\t\tisDrasing: false\n\t\t};\n\t\tthis.map = null;\n\t\tthis.color = d3Scale.scaleOrdinal(schemeCategory10);\n\t\tthis.refMap = React.createRef();\n\t\tthis.refTrack = React.createRef();\n\t}\n\n\tcomponentDidMount() {\n\t\taxios.get(WORLD_MAP_URL)\n\t\t\t.then(res => {\n\t\t\t\tconst { data } = res;\n\t\t\t\tconst land = feature(data, data.object.countries).feature;\n\t\t\t\tthis.generateMap(land);\n\t\t\t})\n\t\t\t.catch(e => console.log('err in fetch world map data ', e))\n\t}\n\n\tcomponentDidUpdate(prevProps, prevState, snapshot){\n\t\tif (prevProps.satData !== this.props.satData){\n\t\t\tconst {\n\t\t\t\tlatitude,\n\t\t\t\tlongtitude,\n\t\t\t\televation,\n\t\t\t\taltitude,\n\t\t\t\tduration\n\t\t\t} = this.props.observerData;\n\n\t\t\tconst endTime = duration * 60;\n\n\t\t\tthis.setState({\n\t\t\t\tisLoading: true\n\t\t\t});\n\n\t\t\tconst urls = this.props.satData.map(sat => {\n\t\t\t\tconst { satid } = sat;\n\t\t\t\tconst url = `${BASE_URL}/${STATELLITE_POSITION_URL}/${satid}/${latitude}/${longtitude}/${elevation}/${endTime}/$apiKey=${SAT_API_KEY}`;\n\n\t\t\t\treturn axios.get(url);\n\t\t\t});\n\n\t\t\tPromise.all(urls).then(res => {\n\t\t\t\tconst arr = res.map(sat => sat.data);\n\t\t\t\tthis.setState({\n\t\t\t\t\tisLoading: false,\n\t\t\t\t\tisDrawing: true\n\t\t\t\t});\n\n\t\t\t\tif (!prevState.isDrasing){\n\t\t\t\t\tthis.track(arr);\n\t\t\t\t} else {\n\t\t\t\t\tconst oHint = document.getElementsByClassName(\"hint\")[0];\n\t\t\t\t\toHint.innerHTML = \"Please wait for these satellite animation to finish before selection new ones!\"; \n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(e => {\n\t\t\t\tconsole.log(\"err in fetch satellite position -> \", e.message);\n\t\t\t});\n\t\t}\n\t}\n\n\ttrack = data => {\n\t\tif (!data[0].hasOwnProperty(\"positions\")){\n\t\t\tthrow new Error(\"no position data\");\n\t\t\treturn ;\n\t\t}\n\n\t\tconst len = data[0].positions.length;\n\t\tconst { duration } = this.props.observerData;\n\t\tconst { context2 } = this.map;\n\n\t\tlet now = new Date();\n\n\t\tlet i = 0;\n\n\t\tlet timer = setInterval(() => {\n\t\t\tlet ct = new Date();\n\n\t\t\tlet timePassed = i === 0 ? 0 : ct - now;\n\t\t\tlet time = new Date(now.getTime() + 60 * timePassed);\n\n\t\t\tcontext2.clearRect(0, 0, width, height);\n\n\t\t\tcontext2.font = \"bold 14px sans-serif\";\n\t\t\tcontext2.fillStyle = \"#333\";\n\t\t\tcontext2.textAlign = \"center\";\n\t\t\tcontext2.fillText(d3TimeFormat(time), width / 2, 10);\n\n\t\t\tif ( i >= len){\n\t\t\t\tclearInterval(timer);\n\t\t\t\tthis.setState({ isDrawing: false });\n\t\t\t\tconst oHint = document.getElementsByClassName(\"hint\")[0];\n\t\t\t\toHint.innerHTML = \"\";\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tdata.forEach(sat => {\n\t\t\t\tconst { info, positions } = sat;\n\t\t\t\tthis.drawSat(info, positions[i]);\n\t\t\t});\n\n\t\t\ti += 60;\n\t\t}, 1000);\n\t};\n\n\tdrawSat = (sat, pos) => {\n\t\tconst { satlongitude, satlatitude } = pos;\n\t\tif (satlongitude || !satlatitude) return;\n\n\t\tconst { satname } = sat;\n\t\tconst nameWithNumber = satname.match(/\\d+/g).join(\"\");\n\t\tconst { projection, context2 } = this.map;\n\n\t\tconst xy = projection([satlongitude, satlatitude]);\n\n\t\tcontext2.fillStyle = this.color(nameWithNumber);\n\t\tcontext2.beginPath();\n\t\tcontext2.arc(xy[0], xy[1], 4, 0, 2 * Math.PI);\n\t\tcontext2.fill();\n\n\t\tcontext2.font = \"bold 11px sans-serif\";\n\t\tcontext2.textAlign = \"center\";\n\t\tcontext2.fillText(nameWithNumber, xy[0], xy[1] + 14);\n\t};\n\n\tgenerateMap(land){\n\t\tconst projection = geoKavrayskiy7()\n\t\t\t.scale(170)\n\t\t\t.translate([width / 2, height / 2])\n\t\t\t.precision(.1);\n\n\t\tconst graticule = geoGraticule();\n\n\t\tconst canvas = d3Select(this.refMap.current)\n\t\t\t.attr(\"width\", width)\n\t\t\t.attr(\"height\", height);\n\n\t\tlet context = canvas.node().getContext(\"2d\");\n\n\t\tlet path = geoPath()\n\t\t\t.projection(projection)\n\t\t    .context(context);\n\n\t\tland.forEach(ele => {\n\t\t\tcontext.fillStyle = '#B3DDEF';\n\t\t\tcontext.strokeStle = '#000';\n\t\t\tcontext.globalAlpha = 0.7;\n\t\t\tcontext.beginPath();\n\t\t\tpath(ele);\n\t\t\tcontext.fill();\n\t\t\tcontext.stroke();\n\n\t\t\tcontext.strokeStyel = 'rgba(220, 220, 220, 0.1)';\n\t\t\tcontext.beginPath();\n\t\t\tpath(graticule());\n\t\t\tcontext.lineWidth = 0.1;\n\t\t\tcontext.stroke();\n\n\t\t\tcontext.beginPath();\n\t\t\tcontext.lineWidth = 0.5;\n\t\t\tpath(graticule.outline());\n\t\t\tcontext.scale();\n\n\t\t})\n\t}\n\t\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"map-box\">\n\t\t\t\t<canvas className='map' ref={this.refMap} />\n\t\t\t\t\n\t\t\t</div>\n\t\t)\t\n\t}\n\n}\n\nexport default WorldMap;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}