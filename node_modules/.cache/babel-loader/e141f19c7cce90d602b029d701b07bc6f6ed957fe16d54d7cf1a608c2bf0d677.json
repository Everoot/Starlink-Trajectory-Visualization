{"ast":null,"code":"var _jsxFileName = \"/Users/eve/Desktop/Projects/SpaceX/Code/starlink/src/components/Main.js\";\nimport React, { Component } from \"react\";\nimport { Row, Col } from 'antd';\nimport SatSetting from './SatSetting';\n\n/*\njs中的import的格式是： import {模块中的方法} from '模块的路径'\n其中模块的路径可以是相对路径，也可以是绝对路径，但是一定要加上模块的后缀名，否则会报错。\n{} 里面的方法是模块中导出的方法，如果是默认导出的方法，那么就不需要加上{}，直接导入就可以了。\nimport React, {Component} from \"react\"; 从react模块中导入React和Component方法。\nReact是一个类，Component是一个方法。\nimport {Row, Col } from 'antd'; 从antd模块中导入Row和Col方法。\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Main extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(Row, {\n      className: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        span: 8,\n        className: \"left-side\",\n        children: /*#__PURE__*/_jsxDEV(SatSetting, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        span: 16,\n        className: \"right-side\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default Main;\n/*\nclass Main extends Component { ... } 定义了一个名为 Main 的类组件。\nextends Component 表示 Main 组件继承了 Component 类。\nrender() { ... } 定义了一个名为 render 的方法，这个方法返回一个 React 元素。\n<Row> ... </Row> 是一个 React 元素，它是一个 HTML 元素，它的类型是 Row。\nRow类型的元素有一个子元素，这个子元素是 main。\n\n<Col span={8} className='left-side'> ... </Col> 是一个 React 元素，\n它是一个 HTML 元素，它的类型是 Col，它有两个属性，分别是 span 和 className。\nspan 属性的值是 8，className 属性的值是 left-side。\n<Col span={8} className='left-side'> ... </Col> 的内容是 left。\n\nSatSetting 是一个 React 元素，它是一个自定义组件，它的类型是 SatSetting。\n\n */","map":{"version":3,"names":["React","Component","Row","Col","SatSetting","jsxDEV","_jsxDEV","Main","render","className","children","span","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/eve/Desktop/Projects/SpaceX/Code/starlink/src/components/Main.js"],"sourcesContent":["import React, {Component} from \"react\";\nimport { Row, Col } from 'antd';\nimport SatSetting from './SatSetting';\n\n/*\njs中的import的格式是： import {模块中的方法} from '模块的路径'\n其中模块的路径可以是相对路径，也可以是绝对路径，但是一定要加上模块的后缀名，否则会报错。\n{} 里面的方法是模块中导出的方法，如果是默认导出的方法，那么就不需要加上{}，直接导入就可以了。\nimport React, {Component} from \"react\"; 从react模块中导入React和Component方法。\nReact是一个类，Component是一个方法。\nimport {Row, Col } from 'antd'; 从antd模块中导入Row和Col方法。\n */\n\nclass Main extends Component{\n    render() {\n        return (\n            <Row className='main'>\n                <Col span={8} className='left-side'>\n                    <SatSetting />\n                </Col>\n                <Col span={16} className='right-side'>\n                </Col>\n            </Row>\n        );\n    }\n}\nexport default Main;\n/*\nclass Main extends Component { ... } 定义了一个名为 Main 的类组件。\nextends Component 表示 Main 组件继承了 Component 类。\nrender() { ... } 定义了一个名为 render 的方法，这个方法返回一个 React 元素。\n<Row> ... </Row> 是一个 React 元素，它是一个 HTML 元素，它的类型是 Row。\nRow类型的元素有一个子元素，这个子元素是 main。\n\n<Col span={8} className='left-side'> ... </Col> 是一个 React 元素，\n它是一个 HTML 元素，它的类型是 Col，它有两个属性，分别是 span 和 className。\nspan 属性的值是 8，className 属性的值是 left-side。\n<Col span={8} className='left-side'> ... </Col> 的内容是 left。\n\nSatSetting 是一个 React 元素，它是一个自定义组件，它的类型是 SatSetting。\n\n */\n"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,SAAS,QAAO,OAAO;AACtC,SAASC,GAAG,EAAEC,GAAG,QAAQ,MAAM;AAC/B,OAAOC,UAAU,MAAM,cAAc;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA,SAAAC,MAAA,IAAAC,OAAA;AASA,MAAMC,IAAI,SAASN,SAAS;EACxBO,MAAMA,CAAA,EAAG;IACL,oBACIF,OAAA,CAACJ,GAAG;MAACO,SAAS,EAAC,MAAM;MAAAC,QAAA,gBACjBJ,OAAA,CAACH,GAAG;QAACQ,IAAI,EAAE,CAAE;QAACF,SAAS,EAAC,WAAW;QAAAC,QAAA,eAC/BJ,OAAA,CAACF,UAAU;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACb,CAAC,eACNT,OAAA,CAACH,GAAG;QAACQ,IAAI,EAAE,EAAG;QAACF,SAAS,EAAC;MAAY;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAEd;AACJ;AACA,eAAeR,IAAI;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}