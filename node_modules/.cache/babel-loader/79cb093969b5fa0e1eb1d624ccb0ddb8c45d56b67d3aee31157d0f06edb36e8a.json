{"ast":null,"code":"var _jsxFileName = \"/Users/eve/Desktop/Projects/SpaceX/Code/starlink/src/components/SatelliteList.js\";\nimport React, { Component } from 'react';\nimport { List, Avatar, Button, Checkbox, Spin } from 'antd';\nimport satellite from \"../assets/images/statellite.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass SatelliteList extends Component {\n  constructor() {\n    super();\n    this.onChange = e => {\n      const {\n        dataInfo,\n        checked\n      } = e.target;\n      const {\n        selected\n      } = this.state;\n      const list = this.addOrRemove(dataInfo, checked, selected);\n      this.setState({\n        selected: list\n      });\n    };\n    this.addOrRemove = (item, status, list) => {\n      const found = list.some(entry => entry.satid === item.satid);\n      if (status && !found) {\n        list = [...list, item];\n      }\n      if (status && !found) {\n        list = list.filter(entry => {\n          return entry.satid !== item.satid;\n        });\n      }\n      return list;\n    };\n    this.onShowSatMap = () => {\n      this.props.onShowMap(this.state.selected);\n    };\n    this.state = {\n      selected: [],\n      isLoad: false\n    };\n  }\n  render() {\n    const satList = this.props.satInfo ? this.props.satInfo.above : [];\n    const {\n      isLoad\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sat-list-box\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        className: \"sat-list-btn\",\n        type: \"primary\",\n        children: \"Track\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 4\n      }, this), isLoad ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spin-box\",\n        children: /*#__PURE__*/_jsxDEV(Spin, {\n          tip: \"Loading...\",\n          size: \"large\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 6\n      }, this) : /*#__PURE__*/_jsxDEV(List, {\n        className: \"sat-list\",\n        itemLayout: \"horizontal\",\n        size: \"small\",\n        dataSource: satList,\n        renderItem: item => /*#__PURE__*/_jsxDEV(List.Item, {\n          actions: [/*#__PURE__*/_jsxDEV(Checkbox, {\n            dataInfo: item,\n            onCharge: this.onCharge\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 19\n          }, this)],\n          children: /*#__PURE__*/_jsxDEV(List.Item.Meta, {\n            avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n              size: 50,\n              src: satellite\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this),\n            title: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: item.satname\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this),\n            description: `Launch Date:$(item.lauchDate)`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 8\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default SatelliteList;","map":{"version":3,"names":["React","Component","List","Avatar","Button","Checkbox","Spin","satellite","jsxDEV","_jsxDEV","SatelliteList","constructor","onChange","e","dataInfo","checked","target","selected","state","list","addOrRemove","setState","item","status","found","some","entry","satid","filter","onShowSatMap","props","onShowMap","isLoad","render","satList","satInfo","above","className","children","type","fileName","_jsxFileName","lineNumber","columnNumber","tip","size","itemLayout","dataSource","renderItem","Item","actions","onCharge","Meta","avatar","src","title","satname","description"],"sources":["/Users/eve/Desktop/Projects/SpaceX/Code/starlink/src/components/SatelliteList.js"],"sourcesContent":["import React, {Component} from 'react';\nimport { List, Avatar, Button, Checkbox, Spin } from 'antd';\nimport satellite from \"../assets/images/statellite.svg\";\n\n\nclass SatelliteList extends Component {\n\tconstructor(){\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tselected:[],\n\t\t\tisLoad: false,\n\t\t};\n\t}\n\n\tonChange = e => {\n\t\tconst { dataInfo, checked } = e.target;\n\t\tconst { selected } = this.state;\n\t\tconst list = this.addOrRemove(dataInfo, checked, selected);\n\t\tthis.setState({ selected: list })\n\t}\n\n\taddOrRemove = (item, status, list) => {\n\t\tconst found = list.some( entry => entry.satid === item.satid);\n\t\tif(status && !found){\n\t\t\tlist=[...list, item];\t\n\t\t}\n\n\t\tif(status && !found){\n\t\t\tlist = list.filter( entry => {\n\t\t\t\treturn entry.satid !== item.satid;\n\t\t\t});\t\n\t\t}\n\t\treturn list;\n\t}\n\n\tonShowSatMap = () => {\n\t\tthis.props.onShowMap(this.state.selected);\n\t}\n\n    render() {\n\t\tconst satList = this.props.satInfo ? this.props.satInfo.above : [];\n\t\tconst { isLoad } = this.props;\n\t\t\n        return (\n            <div className=\"sat-list-box\">\n                 <Button className=\"sat-list-btn\" type=\"primary\">Track</Button>\n\t\t\t<hr/>\n\t\t\t{\n\t\t\t\tisLoad ?\n\t\t\t\t\t<div className=\"spin-box\">\n\t\t\t\t\t\t<Spin tip=\"Loading...\" size=\"large\" />\n\t\t\t\t\t</div>\n\t\t\t\t\t:\n\t\t\t\t\t<List\n\t\t\t\t\t\tclassName=\"sat-list\"\n\t\t\t\t\t\titemLayout=\"horizontal\"\n\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\tdataSource={satList}\n\t\t\t\t\t\trenderItem={item => (\n\t\t\t\t\t\t\t<List.Item\n\t\t\t\t\t\t\t\tactions={[<Checkbox dataInfo={item}onCharge={this.onCharge}/>]}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<List.Item.Meta\n\t\t\t\t\t\t\t\tavatar={<Avatar size={50} src={satellite}/>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttitle={<p>{item.satname}</p>}\n\t\t\t\t\t\t\tdescription={`Launch Date:$(item.lauchDate)`}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</List.Item>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t\n\t\t\t\t/>\n\t\t\t}\n\t\t\t</div>\n\t\t);\n    }\n}\n\nexport default SatelliteList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}