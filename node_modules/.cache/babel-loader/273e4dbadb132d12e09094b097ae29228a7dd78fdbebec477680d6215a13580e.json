{"ast":null,"code":"var _jsxFileName = \"/Users/eve/Desktop/Projects/SpaceX/Code/starlink/src/components/WorldMap.js\";\nimport React, { Component } from 'react';\nimport { feature } from 'topojson-client';\nimport { geoKavrayskiy7 } from 'd3-geo-projection';\nimport { geoGraticule, geoPath } from 'd3-geo';\nimport { select as d3Select } from 'd3-selection';\nimport { BASE_URL, SAT_API_KEY, STATELLITE_POSITION_URL, WORLD_MAP_URL } from '../constants';\nimport axios from 'axios';\nimport { schemeCategory10 } from 'd3-scale-chromatic';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst width = 960;\nconst height = 600;\nclass WorldMap extends Component {\n  constructor() {\n    super();\n    this.state = {\n      isLoading: false,\n      isDrasing: false\n    };\n    this.map = null;\n    this.color = d3Scale.scaleOrdinal(schemeCategory10);\n    this.refMap = /*#__PURE__*/React.createRef();\n    this.refTrack = /*#__PURE__*/React.createRef();\n  }\n  componentDidMount() {\n    axios.get(WORLD_MAP_URL).then(res => {\n      const {\n        data\n      } = res;\n      const land = feature(data, data.object.countries).feature;\n      this.generateMap(land);\n    }).catch(e => console.log('err in fetch world map data ', e));\n  }\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (prevProps.satData !== this.props.satData) {\n      const {\n        latitude,\n        longtitude,\n        elevation,\n        altitude,\n        duration\n      } = this.props.observerData;\n      const endTime = duration * 60;\n      this.setState({\n        isLoading: true\n      });\n      const urls = this.props.satData.map(sat => {\n        const {\n          satid\n        } = sat;\n        const url = `${BASE_URL}/${STATELLITE_POSITION_URL}/${satid}/${latitude}/${longtitude}/${elevation}/${endTime}/$apiKey=${SAT_API_KEY}`;\n        return axios.get(url);\n      });\n    }\n  }\n  generateMap(land) {\n    const projection = geoKavrayskiy7().scale(170).translate([width / 2, height / 2]).precision(.1);\n    const graticule = geoGraticule();\n    const canvas = d3Select(this.refMap.current).attr(\"width\", width).attr(\"height\", height);\n    let context = canvas.node().getContext(\"2d\");\n    let path = geoPath().projection(projection).context(context);\n    land.forEach(ele => {\n      context.fillStyle = '#B3DDEF';\n      context.strokeStle = '#000';\n      context.globalAlpha = 0.7;\n      context.beginPath();\n      path(ele);\n      context.fill();\n      context.stroke();\n      context.strokeStyel = 'rgba(220, 220, 220, 0.1)';\n      context.beginPath();\n      path(graticule());\n      context.lineWidth = 0.1;\n      context.stroke();\n      context.beginPath();\n      context.lineWidth = 0.5;\n      path(graticule.outline());\n      context.scale();\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-box\",\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        className: \"map\",\n        ref: this.refMap\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 4\n    }, this);\n  }\n}\nexport default WorldMap;","map":{"version":3,"names":["React","Component","feature","geoKavrayskiy7","geoGraticule","geoPath","select","d3Select","BASE_URL","SAT_API_KEY","STATELLITE_POSITION_URL","WORLD_MAP_URL","axios","schemeCategory10","jsxDEV","_jsxDEV","width","height","WorldMap","constructor","state","isLoading","isDrasing","map","color","d3Scale","scaleOrdinal","refMap","createRef","refTrack","componentDidMount","get","then","res","data","land","object","countries","generateMap","catch","e","console","log","componentDidUpdate","prevProps","prevState","snapshot","satData","props","latitude","longtitude","elevation","altitude","duration","observerData","endTime","setState","urls","sat","satid","url","projection","scale","translate","precision","graticule","canvas","current","attr","context","node","getContext","path","forEach","ele","fillStyle","strokeStle","globalAlpha","beginPath","fill","stroke","strokeStyel","lineWidth","outline","render","className","children","ref","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/eve/Desktop/Projects/SpaceX/Code/starlink/src/components/WorldMap.js"],"sourcesContent":["import React, {Component} from 'react'\nimport {feature} from 'topojson-client';\nimport {geoKavrayskiy7} from 'd3-geo-projection';\nimport {geoGraticule, geoPath} from 'd3-geo';\n\nimport {select as d3Select} from 'd3-selection';\nimport { BASE_URL, SAT_API_KEY, STATELLITE_POSITION_URL, WORLD_MAP_URL } from '../constants';\nimport axios from 'axios';\nimport {schemeCategory10} from 'd3-scale-chromatic';\n\nconst width = 960;\nconst height = 600;\n\nclass WorldMap extends Component {\n\tconstructor(){\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tisLoading: false,\n\t\t\tisDrasing: false\n\t\t};\n\t\tthis.map = null;\n\t\tthis.color = d3Scale.scaleOrdinal(schemeCategory10);\n\t\tthis.refMap = React.createRef();\n\t\tthis.refTrack = React.createRef();\n\t}\n\n\tcomponentDidMount() {\n\t\taxios.get(WORLD_MAP_URL)\n\t\t\t.then(res => {\n\t\t\t\tconst { data } = res;\n\t\t\t\tconst land = feature(data, data.object.countries).feature;\n\t\t\t\tthis.generateMap(land);\n\t\t\t})\n\t\t\t.catch(e => console.log('err in fetch world map data ', e))\n\t}\n\n\tcomponentDidUpdate(prevProps, prevState, snapshot){\n\t\tif (prevProps.satData !== this.props.satData){\n\t\t\tconst {\n\t\t\t\tlatitude,\n\t\t\t\tlongtitude,\n\t\t\t\televation,\n\t\t\t\taltitude,\n\t\t\t\tduration\n\t\t\t} = this.props.observerData;\n\n\t\t\tconst endTime = duration * 60;\n\n\t\t\tthis.setState({\n\t\t\t\tisLoading: true\n\t\t\t});\n\n\t\t\tconst urls = this.props.satData.map(sat => {\n\t\t\t\tconst { satid } = sat;\n\t\t\t\tconst url = `${BASE_URL}/${STATELLITE_POSITION_URL}/${satid}/${latitude}/${longtitude}/${elevation}/${endTime}/$apiKey=${SAT_API_KEY}`;\n\n\t\t\t\treturn axios.get(url);\n\t\t\t})\n\t\t}\n\t}\n\n\tgenerateMap(land){\n\t\tconst projection = geoKavrayskiy7()\n\t\t\t.scale(170)\n\t\t\t.translate([width / 2, height / 2])\n\t\t\t.precision(.1);\n\n\t\tconst graticule = geoGraticule();\n\n\t\tconst canvas = d3Select(this.refMap.current)\n\t\t\t.attr(\"width\", width)\n\t\t\t.attr(\"height\", height);\n\n\t\tlet context = canvas.node().getContext(\"2d\");\n\n\t\tlet path = geoPath()\n\t\t\t.projection(projection)\n\t\t    .context(context);\n\n\t\tland.forEach(ele => {\n\t\t\tcontext.fillStyle = '#B3DDEF';\n\t\t\tcontext.strokeStle = '#000';\n\t\t\tcontext.globalAlpha = 0.7;\n\t\t\tcontext.beginPath();\n\t\t\tpath(ele);\n\t\t\tcontext.fill();\n\t\t\tcontext.stroke();\n\n\t\t\tcontext.strokeStyel = 'rgba(220, 220, 220, 0.1)';\n\t\t\tcontext.beginPath();\n\t\t\tpath(graticule());\n\t\t\tcontext.lineWidth = 0.1;\n\t\t\tcontext.stroke();\n\n\t\t\tcontext.beginPath();\n\t\t\tcontext.lineWidth = 0.5;\n\t\t\tpath(graticule.outline());\n\t\t\tcontext.scale();\n\n\t\t})\n\t}\n\t\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"map-box\">\n\t\t\t\t<canvas className='map' ref={this.refMap} />\n\t\t\t\t\n\t\t\t</div>\n\t\t)\t\n\t}\n\n}\n\nexport default WorldMap;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}