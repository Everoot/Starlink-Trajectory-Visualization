{"ast":null,"code":"var _jsxFileName = \"/Users/eve/Desktop/Projects/SpaceX/Code/starlink/src/components/Main.js\";\nimport React, { Component } from \"react\";\nimport { Row, Col } from 'antd';\nimport axios from \"axios\";\nimport SatSetting from './SatSetting';\nimport SatelliteList from './SatelliteList';\nimport { SAT_API_KEY, NEARBY_SATELLITE, STARLINK_CATEGORY } from \"../constants\";\nimport WorldMap from './WorldMap';\n\n/*\njs中的import的格式是： import {模块中的方法} from '模块的路径'\n其中模块的路径可以是相对路径，也可以是绝对路径，但是一定要加上模块的后缀名，否则会报错。\n{} 里面的方法是模块中导出的方法，如果是默认导出的方法，那么就不需要加上{}，直接导入就可以了。\nimport React, {Component} from \"react\"; 从react模块中导入React和Component方法。\nReact是一个类，Component是一个方法。\nimport {Row, Col } from 'antd'; 从antd模块中导入Row和Col方法。\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Main extends Component {\n  constructor() {\n    super();\n    this.fetchSatellite = setting => {\n      console.log(\"fetching\");\n      const {\n        latitude,\n        longitude,\n        elevation,\n        altitude\n      } = setting;\n      const url = `/api/${NEARBY_SATELLITE}/${latitude}/${longitude}/${elevation}/${altitude}/${STARLINK_CATEGORY}/&apiKey=${SAT_API_KEY}`;\n      this.setState({\n        isLoadingList: true\n      });\n      axios.get(url).then(response => {\n        console.log(response.data);\n        this.setState({\n          satInfo: response.data,\n          isLoadingList: false\n        });\n      }).catch(error => {\n        console.log('err in fetch satellite -> ', error);\n      });\n    };\n    this.showMap = selected => {\n      this.setState(preState => ({\n        ...preState,\n        satList: [...selected]\n      }));\n    };\n    this.showNearbySatellite = setting => {\n      console.log('show nearby');\n      this.setState({\n        isLoadingList: true,\n        setting: setting\n      });\n      this.fetchSatellite(setting);\n    };\n    this.state = {\n      setting: {},\n      satInfo: {},\n      satList: [],\n      isLoadingList: false\n    };\n  }\n  render() {\n    const {\n      isLoadingList,\n      satInfo,\n      satList,\n      setting\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Row, {\n      className: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        span: 8,\n        className: \"left-side\",\n        children: [/*#__PURE__*/_jsxDEV(SatSetting, {\n          onShow: this.showNearbySatellite\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(SatelliteList, {\n          satInfo: satInfo,\n          isLoad: isLoadingList,\n          onShowMap: this.showMap\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        span: 16,\n        className: \"right-side\",\n        children: /*#__PURE__*/_jsxDEV(WorldMap, {\n          satData: satList,\n          observerData: setting\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default Main;","map":{"version":3,"names":["React","Component","Row","Col","axios","SatSetting","SatelliteList","SAT_API_KEY","NEARBY_SATELLITE","STARLINK_CATEGORY","WorldMap","jsxDEV","_jsxDEV","Main","constructor","fetchSatellite","setting","console","log","latitude","longitude","elevation","altitude","url","setState","isLoadingList","get","then","response","data","satInfo","catch","error","showMap","selected","preState","satList","showNearbySatellite","state","render","className","children","span","onShow","fileName","_jsxFileName","lineNumber","columnNumber","isLoad","onShowMap","satData","observerData"],"sources":["/Users/eve/Desktop/Projects/SpaceX/Code/starlink/src/components/Main.js"],"sourcesContent":["import React, {Component} from \"react\";\nimport { Row, Col } from 'antd';\nimport axios from \"axios\"; \n\nimport SatSetting from './SatSetting';\nimport SatelliteList from './SatelliteList';\nimport { SAT_API_KEY, NEARBY_SATELLITE, STARLINK_CATEGORY} from \"../constants\"; \nimport WorldMap from './WorldMap';\n\n/*\njs中的import的格式是： import {模块中的方法} from '模块的路径'\n其中模块的路径可以是相对路径，也可以是绝对路径，但是一定要加上模块的后缀名，否则会报错。\n{} 里面的方法是模块中导出的方法，如果是默认导出的方法，那么就不需要加上{}，直接导入就可以了。\nimport React, {Component} from \"react\"; 从react模块中导入React和Component方法。\nReact是一个类，Component是一个方法。\nimport {Row, Col } from 'antd'; 从antd模块中导入Row和Col方法。\n */\n\nclass Main extends Component{\n\tconstructor(){\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tsetting: {},\n\t\t\tsatInfo: {},\n\t\t\tsatList: [],\n\t\t\tisLoadingList: false\n\t\t}\n\t}\n\n\n\n\n\n\tfetchSatellite = (setting) => {\n\t\t\tconsole.log(\"fetching\")\n\t\t\tconst { latitude, longitude, elevation, altitude } = setting;\n\t\t\tconst url = `/api/${NEARBY_SATELLITE}/${latitude}/${longitude}/${elevation}/${altitude}/${STARLINK_CATEGORY}/&apiKey=${SAT_API_KEY}`;\n\t\t\tthis.setState({\n\t\t\t\t\tisLoadingList: true\n\t\t\t});\n\t\t\t\n\t\t\taxios.get(url)\n\t\t\t\t\t.then( response => {\n\t\t\t\t\t\t\tconsole.log(response.data);\n\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\tsatInfo: response.data,\n\t\t\t\t\t\t\t\t\tisLoadingList: false\n\t\t\t\t\t\t\t})\n\t\t\t\t\t})\n\t\t\t\t\t.catch( error => {\n\t\t\t\t\t\t\tconsole.log('err in fetch satellite -> ', error);\n\t\t\t\t\t})\n\n\t}\n\n\n\tshowMap = (selected) => {\n\t\tthis.setState(preState => ({\n\t\t\t...preState,\n\t\t\tsatList: [...selected]\n\n\t\t}))\n\t}\n\n\tshowNearbySatellite = (setting) => {\n\t\tconsole.log('show nearby')\n\t\tthis.setState({\n\t\t\tisLoadingList: true,\n\t\t\tsetting: setting\n\t\t})\n\t\tthis.fetchSatellite(setting);\n\t}\n\n\n    render() {\n     \tconst { isLoadingList, satInfo, satList, setting } = this.state;\n\t\t\t\n        return (\n            <Row className='main'>\n                <Col span={8} className='left-side'>\n                    <SatSetting onShow={this.showNearbySatellite} />\n                    <SatelliteList satInfo={satInfo}\n\t\t\t\t\t\t\t\t   isLoad={isLoadingList}\n\t\t\t\t\t\t\t\t   onShowMap={this.showMap}\n\t\t\t\t\t/>\n                </Col>\n                <Col span={16} className='right-side'>\n                    <WorldMap satData={satList} observerData={setting} />\n                </Col>\n            </Row>\n        );\n    }\n\n}\nexport default Main;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}